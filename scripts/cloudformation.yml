AWSTemplateFormatVersion: 2010-09-09

Parameters:
  SSHKeyPairKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: This secure string parameter holds our application password
    Default: NodejsDeploymentKeyPair

Resources:
  BuildArtifactS3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      BucketName: cfn-codebuild-artifacts
      VersioningConfiguration:
        Status: Enabled

  IAMRoleForCodeBuild:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [codebuild.amazonaws.com]
      Policies:
        - PolicyName: "CodeBuildAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - 'ssm:GetParameters'
                - 'logs:*'
                - 's3:*'
                - 'codedeploy:*'
                Effect: "Allow"
                Resource: "*"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildArtifactS3Bucket
      - IAMRoleForCodeBuild 
    Properties:
      ServiceRole: !GetAtt IAMRoleForCodeBuild.Arn
      Artifacts:
        Type: S3
        Location: cfn-codebuild-artifacts
        Name: buildArtifact.zip
        Packaging: ZIP
        Path: deploy-nodejs-cicd
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:6.0
        EnvironmentVariables:
          - Name: PASSWORD
            Value: /Production/AppPassword
            Type: PARAMETER_STORE
      Source:
        Type: GITHUB
        Location: https://github.com/Rishabh570/deploy-nodejs-aws-cicd.git
        Auth:
          Type: OAUTH # Need to manually connect your GitHub account to CodeBuild from console (only required once)
      SourceVersion: cloudformation
      Triggers:
        Webhook: true # to specify particular events to trigger a build => https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-webhookfilter.html

  CodeRevisionS3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      BucketName: cfn-codedeploy-revisions
      VersioningConfiguration:
        Status: Enabled

  EC2IAMRoleForCodeDeploy:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
      Policies:
        - PolicyName: "CodeDeployAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - 's3:*'
                - 's3-object-lambda:*'
                Effect: "Allow"
                Resource: "arn:aws:s3:::cfn-codedeploy-revisions/*"
  
  EC2IAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref EC2IAMRoleForCodeDeploy

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH and HTTP
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0 # SSH access from everywhere shouldn't be allowed
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80
      - CidrIp: 0.0.0.0/0
        FromPort: 3001
        IpProtocol: tcp
        ToPort: 3001

  MyEC2Instance:
    Type: AWS::EC2::Instance
    DependsOn:
      - SSHSecurityGroup
    Properties:
      IamInstanceProfile: !Ref EC2IAMInstanceProfile
      KeyName: !Ref SSHKeyPairKeyName
      AvailabilityZone: ap-south-1a
      ImageId: ami-0e8bfae08669b4b89
      InstanceType: t2.micro
      Monitoring: false
      SecurityGroups:
        - !Ref SSHSecurityGroup
      UserData: !Base64 |
        #!/bin/bash -xe
        sudo yum update -y
        curl -sL https://rpm.nodesource.com/setup_16.x | sudo bash -
        sudo yum install -y ruby wget nodejs
        wget https://aws-codedeploy-eu-west-1.s3.eu-west-1.amazonaws.com/latest/install
        chmod +x ./install
        sudo ./install auto
        node -e "console.log('Running Node.js ' + process.version)"
        npm i pm2 -g
      Tags:
        - Key: environment
          Value: development
        - Key: name
          Value: webserver

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [codedeploy.amazonaws.com]

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    DependsOn: MyEC2Instance
    Properties:
      ApplicationName: cfn-codedeploy-application
  
  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    DependsOn: CodeDeployApplication
    Properties:
      ApplicationName: cfn-codedeploy-application 
      ServiceRoleArn: !GetAtt CodeDeployServiceRole.Arn
      Ec2TagFilters:
        - Key: environment
          Type: KEY_AND_VALUE
          Value: development
      DeploymentGroupName: development
      DeploymentConfigName: CodeDeployDefault.OneAtATime
